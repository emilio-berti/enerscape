{
    "type": [
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        2,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        2,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        2,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        0,
        1,
        3,
        2,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        3,
        0,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2
    ],
    "data": [
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 23 KB\n\n",
        "trying URL 'https://cloud.r-project.org/src/contrib/R.oo_1.24.0.tar.gz'\n",
        "Content type 'application/x-gzip'",
        " length 383514 bytes (374 KB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 374 KB\n\n",
        "trying URL 'https://cloud.r-project.org/src/contrib/R.utils_2.10.1.tar.gz'\n",
        "Content type 'application/x-gzip'",
        " length 362269 bytes (353 KB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 353 KB\n\n",
        "* installing *source* package ‘R.methodsS3’ ...\n",
        "** package ‘R.methodsS3’ successfully unpacked and MD5 sums checked\n",
        "** using staged installation\n",
        "** R\n",
        "** inst\n",
        "** byte-compile and prepare package for lazy loading\n",
        "** help\n",
        "*** installing help indices\n",
        "** building package indices\n",
        "** testing if installed package can be loaded from temporary location\n",
        "** testing if installed package can be loaded from final location\n",
        "** testing if installed package keeps a record of temporary installation path\n",
        "* DONE (R.methodsS3)\n",
        "* installing *source* package ‘R.oo’ ...\n",
        "** package ‘R.oo’ successfully unpacked and MD5 sums checked\n",
        "** using staged installation\n",
        "** R\n",
        "** inst\n",
        "** byte-compile and prepare package for lazy loading\n",
        "** help\n",
        "*** installing help indices\n",
        "** building package indices\n",
        "** testing if installed package can be loaded from temporary location\n",
        "** testing if installed package can be loaded from final location\n",
        "** testing if installed package keeps a record of temporary installation path\n",
        "* DONE (R.oo)\n",
        "* installing *source* package ‘R.utils’ ...\n",
        "** package ‘R.utils’ successfully unpacked and MD5 sums checked\n",
        "** using staged installation\n",
        "** R\n",
        "** inst\n",
        "** byte-compile and prepare package for lazy loading\n",
        "Warning in setGenericS3.default(name, export = exportGeneric, envir = envir,  :\n  Renamed the preexisting function warnings to warnings.default, which was defined in environment base.\n",
        "** help\n",
        "*** installing help indices\n",
        "** building package indices\n",
        "** testing if installed package can be loaded from temporary location\n",
        "** testing if installed package can be loaded from final location\n",
        "** testing if installed package keeps a record of temporary installation path\n",
        "* DONE (R.utils)\n",
        "\n",
        "",
        "The downloaded source packages are in\n\t‘/tmp/Rtmp1TjzQW/downloaded_packages’",
        "",
        "\n",
        "  \r   checking for file ‘/tmp/Rtmp1TjzQW/remotes33a5297f3141/gearslaboratory-gdalUtils-8872aaf/DESCRIPTION’ ...\r  \r\u001B[32m✓\u001B[39m  \u001B[38;5;247mchecking for file ‘/tmp/Rtmp1TjzQW/remotes33a5297f3141/gearslaboratory-gdalUtils-8872aaf/DESCRIPTION’\u001B[39m\u001B[36m\u001B[39m\n\r  \r\u001B[38;5;247m─\u001B[39m\u001B[38;5;247m  \u001B[39m\u001B[38;5;247mpreparing ‘gdalUtils’:\u001B[39m\u001B[36m\u001B[39m\n   checking DESCRIPTION meta-information ...\r  \r\u001B[32m✓\u001B[39m  \u001B[38;5;247mchecking DESCRIPTION meta-information\u001B[39m\u001B[36m\u001B[39m\n\r  \r\u001B[38;5;247m─\u001B[39m\u001B[38;5;247m  \u001B[39m\u001B[38;5;247mchecking for LF line-endings in source and make files and shell scripts\u001B[39m\u001B[36m\u001B[39m",
        "\n\r  \r\u001B[38;5;247m─\u001B[39m\u001B[38;5;247m  \u001B[39m\u001B[38;5;247mchecking for empty or unneeded directories\u001B[39m\u001B[36m\u001B[39m\n\r  \r\u001B[38;5;247m─\u001B[39m\u001B[38;5;247m  \u001B[39m\u001B[38;5;247mbuilding ‘gdalUtils_2.0.3.2.tar.gz’\u001B[39m\u001B[36m\u001B[39m\n\r  \r   Warning: invalid uid value replaced by that for user 'nobody'\n\r  \r   Warning: invalid gid value replaced by that for user 'nobody'\n   \n\r",
        "Installing package into ‘/home/eb97ziwi/R/x86_64-pc-linux-gnu-library/4.0’\n(as ‘lib’ is unspecified)\n",
        "* installing *source* package ‘gdalUtils’ ...\n",
        "** using staged installation\n",
        "** R\n",
        "** inst\n",
        "** byte-compile and prepare package for lazy loading\n",
        "** help\n",
        "*** installing help indices\n",
        "** building package indices\n",
        "** testing if installed package can be loaded from temporary location\n",
        "** testing if installed package can be loaded from final location\n",
        "** testing if installed package keeps a record of temporary installation path\n",
        "* DONE (gdalUtils)\n",
        "> ",
        "  for (x in c(\"raster\", \"gdalUtils\")) {",
        "+ ",
        "    if (!require(x, character.only = TRUE)) {",
        "+ ",
        "      stop(\"Package \", x, \" not installed, aborting.\")",
        "+ ",
        "    }",
        "+ ",
        "  }",
        "Loading required package: gdalUtils\n",
        "> ",
        "gdalUtils::gdaldem(\"slope\", dem, slope)",
        "ERROR 4: raster(ncol=661, nrow=792, xmn=880840, xmx=887450, ymn=4669340, ymx=4677260, crs='+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs'): No such file or directory\nGDALOpen failed - 4\nraster(ncol=661, nrow=792, xmn=880840, xmx=887450, ymn=4669340, ymx=4677260, crs='+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs'): No such file or directory\n",
        "NULL\n",
        "Warning message:\n",
        "In system(cmd, intern = TRUE) :",
        "\n ",
        " running command '\"/usr/bin/gdaldem\" \"slope\" \"raster(ncol=661, nrow=792, xmn=880840, xmx=887450, ymn=4669340, ymx=4677260, crs='+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs')\"  \"raster(ncol=661, nrow=792, xmn=880840, xmx=887450, ymn=4669340, ymx=4677260, crs='+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs')\"' had status 1\n",
        "> ",
        "gdalUtils::gdaldem(\"slope\", dem, slope)",
        "ERROR 4: raster(ncol=661, nrow=792, xmn=880840, xmx=887450, ymn=4669340, ymx=4677260, crs='+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs'): No such file or directory\nGDALOpen failed - 4\nraster(ncol=661, nrow=792, xmn=880840, xmx=887450, ymn=4669340, ymx=4677260, crs='+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs'): No such file or directory\n",
        "NULL\n",
        "Warning message:\n",
        "In system(cmd, intern = TRUE) :",
        "\n ",
        " running command '\"/usr/bin/gdaldem\" \"slope\" \"raster(ncol=661, nrow=792, xmn=880840, xmx=887450, ymn=4669340, ymx=4677260, crs='+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs')\"  \"raster(ncol=661, nrow=792, xmn=880840, xmx=887450, ymn=4669340, ymx=4677260, crs='+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs')\"' had status 1\n",
        "> ",
        "gdalUtils::gdaldem(\"slope\", dem, file.path(\"w46585_s10\", \"slope\"))",
        "ERROR 4: raster(ncol=661, nrow=792, xmn=880840, xmx=887450, ymn=4669340, ymx=4677260, crs='+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs'): No such file or directory\nGDALOpen failed - 4\nraster(ncol=661, nrow=792, xmn=880840, xmx=887450, ymn=4669340, ymx=4677260, crs='+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs'): No such file or directory\n",
        "NULL\n",
        "Warning message:\n",
        "In system(cmd, intern = TRUE) :",
        "\n ",
        " running command '\"/usr/bin/gdaldem\" \"slope\" \"raster(ncol=661, nrow=792, xmn=880840, xmx=887450, ymn=4669340, ymx=4677260, crs='+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs')\"  \"w46585_s10/slope\"' had status 1\n",
        "> ",
        "file.path(\"w46585_s10\", \"slope.tif\")",
        "[1] \"w46585_s10/slope.tif\"\n",
        "> ",
        "gdalUtils::gdaldem(\"slope\", dem, file.path(\"w46585_s10\", \"slope.tif\"))",
        "ERROR 4: raster(ncol=661, nrow=792, xmn=880840, xmx=887450, ymn=4669340, ymx=4677260, crs='+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs'): No such file or directory\nGDALOpen failed - 4\nraster(ncol=661, nrow=792, xmn=880840, xmx=887450, ymn=4669340, ymx=4677260, crs='+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs'): No such file or directory\n",
        "NULL\n",
        "Warning message:\n",
        "In system(cmd, intern = TRUE) :",
        "\n ",
        " running command '\"/usr/bin/gdaldem\" \"slope\" \"raster(ncol=661, nrow=792, xmn=880840, xmx=887450, ymn=4669340, ymx=4677260, crs='+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs')\"  \"w46585_s10/slope.tif\"' had status 1\n",
        "> ",
        "gdalUtils::gdaldem(\"slope\", dem, file.path(\"w46585_s10\", \"slope.tif\"),",
        "+ ",
        "                   output_Raster = TRUE, verbose = TRUE)",
        "Checking gdal_installation...\n",
        "GDAL version 3.0.4\n",
        "GDAL command being used: \"/usr/bin/gdaldem\" \"slope\" \"raster(ncol=661, nrow=792, xmn=880840, xmx=887450, ymn=4669340, ymx=4677260, crs='+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs')\"  \"w46585_s10/slope.tif\"\n",
        "ERROR 4: raster(ncol=661, nrow=792, xmn=880840, xmx=887450, ymn=4669340, ymx=4677260, crs='+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs'): No such file or directory\nGDALOpen failed - 4\nraster(ncol=661, nrow=792, xmn=880840, xmx=887450, ymn=4669340, ymx=4677260, crs='+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs'): No such file or directory\n",
        "\n",
        "Error in .local(.Object, ...) : \n\n",
        "In addition: ",
        "Warning message:\n",
        "In system(cmd, intern = TRUE) :",
        "\n ",
        " running command '\"/usr/bin/gdaldem\" \"slope\" \"raster(ncol=661, nrow=792, xmn=880840, xmx=887450, ymn=4669340, ymx=4677260, crs='+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs')\"  \"w46585_s10/slope.tif\"' had status 1\n",
        "Error in .rasterObjectFromFile(x, objecttype = \"RasterBrick\", ...) : \n  Cannot create a RasterLayer object from this file. (file does not exist)\n",
        "> ",
        "dem",
        "class      : RasterLayer \ndimensions : 792, 661, 523512  (nrow, ncol, ncell)\nresolution : 10, 10  (x, y)\nextent     : 880840, 887450, 4669340, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : w46585_s10 \nvalues     : 642.2764, 2346.241  (min, max)\n\n",
        "> ",
        "gdalUtils::gdaldem(\"slope\", ",
        "+ ",
        "                   file.path(\"w46585_s10\", \"w46585_s10.tif\"),",
        "+ ",
        "                   file.path(\"w46585_s10\", \"slope.tif\"),",
        "+ ",
        "                   output_Raster = TRUE, verbose = TRUE)",
        "Checking gdal_installation...\n",
        "GDAL version 3.0.4\n",
        "GDAL command being used: \"/usr/bin/gdaldem\" \"slope\" \"w46585_s10/w46585_s10.tif\"  \"w46585_s10/slope.tif\"\n",
        "0...10...20...30...40...50...60...70...80...90...100 - done.\n",
        "class      : RasterBrick \ndimensions : 5010, 5010, 25100100, 1  (nrow, ncol, ncell, nlayers)\nresolution : 10, 10  (x, y)\nextent     : 849950, 900050, 4649950, 4700050  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : /home/eb97ziwi/Proj/enerscape/enerscape/w46585_s10/slope.tif \nnames      : layer \n\n",
        "> ",
        "slope2 <- gdalUtils::gdaldem(\"slope\", ",
        "+ ",
        "                   file.path(\"w46585_s10\", \"w46585_s10.tif\"),",
        "+ ",
        "                   file.path(\"w46585_s10\", \"slope.tif\"),",
        "+ ",
        "                   output_Raster = TRUE, verbose = TRUE)",
        "Checking gdal_installation...\n",
        "GDAL version 3.0.4\n",
        "GDAL command being used: \"/usr/bin/gdaldem\" \"slope\" \"w46585_s10/w46585_s10.tif\"  \"w46585_s10/slope.tif\"\n",
        "0...10...20...30...40...50...60...70...80...90...100 - done.\n",
        "> ",
        "slope2 <- crop(slope2, e)",
        "> ",
        "plot(slope)",
        "> ",
        "slope <- raster(\"w46585_s10/w46585_s10_slope.tif\")",
        "> ",
        "e <- extent(c(880841.3, 887445.7, 4669335,4677260))",
        "> ",
        "slope <- crop(slope, e)",
        "> ",
        "plot(slope)",
        "> ",
        "plot(slope2)",
        "> ",
        "slope - slope2",
        "class      : RasterLayer \ndimensions : 792, 661, 523512  (nrow, ncol, ncell)\nresolution : 10, 10  (x, y)\nextent     : 880840, 887450, 4669340, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 0, 0  (min, max)\n\n",
        "> ",
        "# this is a wrapper to gdal slope input output",
        "> ",
        "slope <- gdalUtils::gdaldem(\"slope\", ",
        "+ ",
        "                   file.path(\"w46585_s10\", \"w46585_s10.tif\"),",
        "+ ",
        "                   file.path(\"w46585_s10\", \"slope.tif\"),",
        "+ ",
        "                   output_Raster = TRUE, verbose = TRUE)",
        "Checking gdal_installation...\n",
        "GDAL version 3.0.4\n",
        "GDAL command being used: \"/usr/bin/gdaldem\" \"slope\" \"w46585_s10/w46585_s10.tif\"  \"w46585_s10/slope.tif\"\n",
        "0...10...20...30...40...50...60...70...80...90...100 - done.\n",
        "> ",
        "# this is a wrapper to gdal slope input output",
        "> ",
        "slope <- gdalUtils::gdaldem(\"slope\",",
        "+ ",
        "                   file.path(\"w46585_s10\", \"w46585_s10.tif\"),",
        "+ ",
        "                   output_Raster = TRUE, verbose = TRUE)",
        "Checking gdal_installation...\n",
        "GDAL version 3.0.4\n",
        "GDAL command being used: \"/usr/bin/gdaldem\" \"slope\" \"w46585_s10/w46585_s10.tif\"  \n",
        "\nFAILURE: Missing destination.\n",
        " Usage:  - To generate a shaded relief map from any GDAL-supported elevation raster :      gdaldem hillshade input_dem output_hillshade                  [-z ZFactor (default=1)] [-s scale* (default=1)]                  [-az Azimuth (default=315)] [-alt Altitude (default=45)]                 [-alg ZevenbergenThorne] [-combined | -multidirectional | -igor]                 [-compute_edges] [-b Band (default=1)] [-of format] [-co \"NAME=VALUE\"]* [-q] - To generates a slope map from any GDAL-supported elevation raster :     gdaldem slope input_dem output_slope_map                  [-p use percent slope (default=degrees)] [-s scale* (default=1)]                 [-alg ZevenbergenThorne]                 [-compute_edges] [-b Band (default=1)] [-of format] [-co \"NAME=VALUE\"]* [-q] - To generate an aspect map from any GDAL-supported elevation raster   Outputs a 32-bit float tiff with pixel values from 0-360 indicating azimuth :     gdaldem aspect input_dem output_aspect_map                  [-trigonometric] [-zero_for_flat]                 [-alg ZevenbergenThorne]                 [-compute_edges] [-b Band (default=1)] [-of format] [-co \"NAME=VALUE\"]* [-q] - To generate a color relief map from any GDAL-supported elevation raster     gdaldem color-relief input_dem color_text_file output_color_relief_map                 [-alpha] [-exact_color_entry | -nearest_color_entry]                 [-b Band (default=1)] [-of format] [-co \"NAME=VALUE\"]* [-q]     where color_text_file contains lines of the format \"elevation_value red green blue\" - To generate a Terrain Ruggedness Index (TRI) map from any GDAL-supported elevation raster     gdaldem TRI input_dem output_TRI_map                 [-compute_edges] [-b Band (default=1)] [-of format] [-co \"NAME=VALUE\"]* [-q] - To generate a Topographic Position Index (TPI) map from any GDAL-supported elevation raster     gdaldem TPI input_dem output_TPI_map                 [-compute_edges] [-b Band (default=1)] [-of format] [-co \"NAME=VALUE\"]* [-q] - To generate a roughness map from any GDAL-supported elevation raster     gdaldem roughness input_dem output_roughness_map                 [-compute_edges] [-b Band (default=1)] [-of format] [-co \"NAME=VALUE\"]* [-q] Notes :    Scale is the ratio of vertical units to horizontal    for Feet:Latlong use scale=370400, for Meters:LatLong use scale=111120 \n",
        "Error in h(simpleError(msg, call)) : \n  error in evaluating the argument 'x' in selecting a method for function 'brick': argument \"output\" is missing, with no default\n",
        "In addition: ",
        "Warning message:\n",
        "In system(cmd, intern = TRUE) :",
        "\n ",
        " running command '\"/usr/bin/gdaldem\" \"slope\" \"w46585_s10/w46585_s10.tif\"  ' had status 1\n",
        "> ",
        "dem <- raster(\"w46585_s10/w46585_s10.tif\")",
        "> ",
        "dem_file <- \"w46585_s10/w46585_s10.tif\"",
        "> ",
        "slope_output <- \"w46585_s10/w46585_s10_slope.tif\"",
        "> ",
        "  gdalUtils::gdaldem(\"slope\", ",
        "+ ",
        "                     dem_file,",
        "+ ",
        "                     slope_file,",
        "+ ",
        "                     output_Raster = TRUE, ",
        "+ ",
        "                     verbose = TRUE)",
        "Error in as.list.environment(environment()) : \n  object 'slope_file' not found\n",
        "> ",
        "  gdalUtils::gdaldem(\"slope\", ",
        "+ ",
        "                     dem_file,",
        "+ ",
        "                     slope_output,",
        "+ ",
        "                     output_Raster = TRUE, ",
        "+ ",
        "                     verbose = TRUE)",
        "Checking gdal_installation...\n",
        "GDAL version 3.0.4\n",
        "GDAL command being used: \"/usr/bin/gdaldem\" \"slope\" \"w46585_s10/w46585_s10.tif\"  \"w46585_s10/w46585_s10_slope.tif\"\n",
        "0...10...20...30...40...50...60...70...80...90...100 - done.\n",
        "class      : RasterBrick \ndimensions : 5010, 5010, 25100100, 1  (nrow, ncol, ncell, nlayers)\nresolution : 10, 10  (x, y)\nextent     : 849950, 900050, 4649950, 4700050  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : /home/eb97ziwi/Proj/enerscape/enerscape/w46585_s10/w46585_s10_slope.tif \nnames      : layer \n\n",
        "> ",
        "  slope <- gdalUtils::gdaldem(\"slope\", ",
        "+ ",
        "                     dem_file,",
        "+ ",
        "                     slope_output,",
        "+ ",
        "                     output_Raster = TRUE, ",
        "+ ",
        "                     verbose = TRUE)",
        "Checking gdal_installation...\n",
        "GDAL version 3.0.4\n",
        "GDAL command being used: \"/usr/bin/gdaldem\" \"slope\" \"w46585_s10/w46585_s10.tif\"  \"w46585_s10/w46585_s10_slope.tif\"\n",
        "0...10...20...30...40...50...60...70...80...90...100 - done.\n",
        "> ",
        "dem <- raster(\"w46585_s10/w46585_s10.tif\")",
        "> ",
        "slope <- raster(\"w46585_s10/w46585_s10_slope.tif\")",
        "> ",
        "e <- extent(c(880841.3, 887445.7, 4669335,4677260))",
        "> ",
        "dem <- crop(dem, e)",
        "> ",
        "slope <- crop(slope, e)",
        "> ",
        "plot(log10(dem), col = RColorBrewer::brewer.pal(9, \"Blues\"))",
        "> ",
        "slope[slope < 50] <- NA",
        "> ",
        "plot(slope, add = TRUE, col = RColorBrewer::brewer.pal(9, \"Reds\"))",
        "> ",
        "dem_file <- \"w46585_s10/w46585_s10.tif\"",
        "> ",
        "slope_output <- \"w46585_s10/w46585_s10_slope.tif\"",
        "> ",
        "slope <- dem_to_slope(dem_file, slope_output)",
        "Error in dem_to_slope(dem_file, slope_output) : \n  unused argument (slope_output)\n",
        "> ",
        "source(\"R/dem_to_slope.R\")",
        "> ",
        "slope <- dem_to_slope(dem_file, slope_output)",
        "Checking gdal_installation...\n",
        "GDAL version 3.0.4\n",
        "GDAL command being used: \"/usr/bin/gdaldem\" \"slope\" \"w46585_s10/w46585_s10.tif\"  \"w46585_s10/w46585_s10_slope.tif\"\n",
        "0...10...20...30...40...50...60...70...80...90...100 - done.\n",
        "> ",
        "plot(slope)",
        "> ",
        "\n",
        "> ",
        "slope <- crop(slope, r)",
        "Error in .local(x, y, ...) : Cannot get an Extent object from argument y\n",
        "> ",
        "slope <- crop(slope, e)",
        "> ",
        "plot(slope)",
        "> ",
        "slope",
        "class      : RasterBrick \ndimensions : 792, 661, 523512, 1  (nrow, ncol, ncell, nlayers)\nresolution : 10, 10  (x, y)\nextent     : 880840, 887450, 4669340, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      :      layer \nmin values : 0.07058942 \nmax values :   76.45005 \n\n",
        "> ",
        "sin(slope)",
        "class      : RasterLayer \ndimensions : 792, 661, 523512  (nrow, ncol, ncell)\nresolution : 10, 10  (x, y)\nextent     : 880840, 887450, 4669340, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : -1, 1  (min, max)\n\n",
        "> ",
        "?sin",
        "> ",
        "sin(slope)",
        "class      : RasterLayer \ndimensions : 792, 661, 523512  (nrow, ncol, ncell)\nresolution : 10, 10  (x, y)\nextent     : 880840, 887450, 4669340, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : -1, 1  (min, max)\n\n",
        "> ",
        "pot(sin(slope))",
        "Error in pot(sin(slope)) : could not find function \"pot\"\n",
        "> ",
        "plot(sin(slope))",
        "> ",
        "plot(slope)",
        "> ",
        "a <- slope",
        "> ",
        "a <- aggregate(a, 100)",
        "> ",
        "a",
        "class      : RasterLayer \ndimensions : 8, 7, 56  (nrow, ncol, ncell)\nresolution : 1000, 1000  (x, y)\nextent     : 880840, 887840, 4669260, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 9.14651, 37.19937  (min, max)\n\n",
        "> ",
        "plot(a)",
        "> ",
        "sin(a)",
        "class      : RasterLayer \ndimensions : 8, 7, 56  (nrow, ncol, ncell)\nresolution : 1000, 1000  (x, y)\nextent     : 880840, 887840, 4669260, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : -0.9972442, 0.9999314  (min, max)\n\n",
        "> ",
        "plot(sin(a))",
        "> ",
        "sin(a)",
        "class      : RasterLayer \ndimensions : 8, 7, 56  (nrow, ncol, ncell)\nresolution : 1000, 1000  (x, y)\nextent     : 880840, 887840, 4669260, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : -0.9972442, 0.9999314  (min, max)\n\n",
        "> ",
        "slope",
        "class      : RasterBrick \ndimensions : 792, 661, 523512, 1  (nrow, ncol, ncell, nlayers)\nresolution : 10, 10  (x, y)\nextent     : 880840, 887450, 4669340, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      :      layer \nmin values : 0.07058942 \nmax values :   76.45005 \n\n",
        "> ",
        "sin(a)",
        "class      : RasterLayer \ndimensions : 8, 7, 56  (nrow, ncol, ncell)\nresolution : 1000, 1000  (x, y)\nextent     : 880840, 887840, 4669260, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : -0.9972442, 0.9999314  (min, max)\n\n",
        "> ",
        "slope",
        "class      : RasterBrick \ndimensions : 792, 661, 523512, 1  (nrow, ncol, ncell, nlayers)\nresolution : 10, 10  (x, y)\nextent     : 880840, 887450, 4669340, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      :      layer \nmin values : 0.07058942 \nmax values :   76.45005 \n\n",
        "> ",
        "sin(76)",
        "[1] 0.5661076\n",
        "> ",
        "sin(0.07)",
        "[1] 0.06994285\n",
        "> ",
        "a",
        "class      : RasterLayer \ndimensions : 8, 7, 56  (nrow, ncol, ncell)\nresolution : 1000, 1000  (x, y)\nextent     : 880840, 887840, 4669260, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 9.14651, 37.19937  (min, max)\n\n",
        "> ",
        "calc(a, fun = function(x) {sin(x)})",
        "class      : RasterLayer \ndimensions : 8, 7, 56  (nrow, ncol, ncell)\nresolution : 1000, 1000  (x, y)\nextent     : 880840, 887840, 4669260, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : -0.9972442, 0.9999314  (min, max)\n\n",
        "> ",
        "sin(x)",
        "Error in sin(x) : non-numeric argument to mathematical function\n",
        "> ",
        "sin(a)",
        "class      : RasterLayer \ndimensions : 8, 7, 56  (nrow, ncol, ncell)\nresolution : 1000, 1000  (x, y)\nextent     : 880840, 887840, 4669260, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : -0.9972442, 0.9999314  (min, max)\n\n",
        "> ",
        "calc(a, fun = function(x) {sin(x)})",
        "class      : RasterLayer \ndimensions : 8, 7, 56  (nrow, ncol, ncell)\nresolution : 1000, 1000  (x, y)\nextent     : 880840, 887840, 4669260, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : -0.9972442, 0.9999314  (min, max)\n\n",
        "> ",
        "a",
        "class      : RasterLayer \ndimensions : 8, 7, 56  (nrow, ncol, ncell)\nresolution : 1000, 1000  (x, y)\nextent     : 880840, 887840, 4669260, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 9.14651, 37.19937  (min, max)\n\n",
        "> ",
        "min(a, na.rm = T)",
        "class      : RasterLayer \ndimensions : 8, 7, 56  (nrow, ncol, ncell)\nresolution : 1000, 1000  (x, y)\nextent     : 880840, 887840, 4669260, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 9.14651, 37.19937  (min, max)\n\n",
        "Warning message:\n",
        "In min(new(\"RasterLayer\", file = new(\".RasterFile\", name = \"\", datanotation = \"FLT4S\",  :",
        "\n ",
        " Nothing to summarize if you provide a single RasterLayer; see cellStats\n",
        "> ",
        "min(a, na.rm = F)",
        "class      : RasterLayer \ndimensions : 8, 7, 56  (nrow, ncol, ncell)\nresolution : 1000, 1000  (x, y)\nextent     : 880840, 887840, 4669260, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 9.14651, 37.19937  (min, max)\n\n",
        "Warning message:\n",
        "In min(new(\"RasterLayer\", file = new(\".RasterFile\", name = \"\", datanotation = \"FLT4S\",  :",
        "\n ",
        " Nothing to summarize if you provide a single RasterLayer; see cellStats\n",
        "> ",
        "min(values(a), na.rm = T)",
        "[1] 9.14651\n",
        "> ",
        "min(values(a), na.rm = F)",
        "[1] 9.14651\n",
        "> ",
        "min(values(a), na.rm = T)",
        "[1] 9.14651\n",
        "> ",
        "sin(min(values(a), na.rm = T))",
        "[1] 0.2746905\n",
        "> ",
        "sin(max(values(a), na.rm = T))",
        "[1] -0.4791971\n",
        "> ",
        "a",
        "class      : RasterLayer \ndimensions : 8, 7, 56  (nrow, ncol, ncell)\nresolution : 1000, 1000  (x, y)\nextent     : 880840, 887840, 4669260, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 9.14651, 37.19937  (min, max)\n\n",
        "> ",
        "max(a)",
        "class      : RasterLayer \ndimensions : 8, 7, 56  (nrow, ncol, ncell)\nresolution : 1000, 1000  (x, y)\nextent     : 880840, 887840, 4669260, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 9.14651, 37.19937  (min, max)\n\n",
        "Warning message:\n",
        "In max(new(\"RasterLayer\", file = new(\".RasterFile\", name = \"\", datanotation = \"FLT4S\",  :",
        "\n ",
        " Nothing to summarize if you provide a single RasterLayer; see cellStats\n",
        "> ",
        "max(values(a))",
        "[1] 37.19937\n",
        "> ",
        "sin(37)",
        "[1] -0.6435381\n",
        "> ",
        "?sin",
        "> ",
        "sin(90)",
        "[1] 0.8939967\n",
        "> ",
        "sinpi(90)",
        "[1] 0\n",
        "> ",
        "sinpi(0)",
        "[1] 0\n",
        "> ",
        "sin(52.517 * a)",
        "class      : RasterLayer \ndimensions : 8, 7, 56  (nrow, ncol, ncell)\nresolution : 1000, 1000  (x, y)\nextent     : 880840, 887840, 4669260, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : -0.9928382, 0.999478  (min, max)\n\n",
        "> ",
        "sin(a)",
        "class      : RasterLayer \ndimensions : 8, 7, 56  (nrow, ncol, ncell)\nresolution : 1000, 1000  (x, y)\nextent     : 880840, 887840, 4669260, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : -0.9972442, 0.9999314  (min, max)\n\n",
        "> ",
        "(52.517 * a)",
        "class      : RasterLayer \ndimensions : 8, 7, 56  (nrow, ncol, ncell)\nresolution : 1000, 1000  (x, y)\nextent     : 880840, 887840, 4669260, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 480.3473, 1953.599  (min, max)\n\n",
        "> ",
        "sin(a / 52.517)",
        "class      : RasterLayer \ndimensions : 8, 7, 56  (nrow, ncol, ncell)\nresolution : 1000, 1000  (x, y)\nextent     : 880840, 887840, 4669260, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 0.1732837, 0.6505665  (min, max)\n\n",
        "> ",
        "(a / 52.517)",
        "class      : RasterLayer \ndimensions : 8, 7, 56  (nrow, ncol, ncell)\nresolution : 1000, 1000  (x, y)\nextent     : 880840, 887840, 4669260, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 0.1741628, 0.7083301  (min, max)\n\n",
        "> ",
        "sin(90 / 52.517)",
        "[1] 0.9898022\n",
        "> ",
        "sin(0.01745329 * 90)",
        "[1] 1\n",
        "> ",
        "  W <- m * g * sin(0.01745329 * slope) #radians",
        "Error: object 'm' not found\n",
        "> ",
        "(a * 0.01745329)",
        "class      : RasterLayer \ndimensions : 8, 7, 56  (nrow, ncol, ncell)\nresolution : 1000, 1000  (x, y)\nextent     : 880840, 887840, 4669260, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 0.1596367, 0.6492514  (min, max)\n\n",
        "> ",
        "sin(a * 0.01745329)",
        "class      : RasterLayer \ndimensions : 8, 7, 56  (nrow, ncol, ncell)\nresolution : 1000, 1000  (x, y)\nextent     : 880840, 887840, 4669260, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 0.1589595, 0.6045903  (min, max)\n\n",
        "> ",
        "slope",
        "class      : RasterBrick \ndimensions : 792, 661, 523512, 1  (nrow, ncol, ncell, nlayers)\nresolution : 10, 10  (x, y)\nextent     : 880840, 887450, 4669340, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      :      layer \nmin values : 0.07058942 \nmax values :   76.45005 \n\n",
        "> ",
        "m <- 1",
        "> ",
        "enerscape <- function(slope, m) {",
        "+ ",
        "  g <- 9.80665",
        "+ ",
        "  W <- m * g * sin(0.01745329 * slope) #radians",
        "+ ",
        "  return(W)",
        "+ ",
        "}",
        "> ",
        "enerscape(slope, 1)",
        "class      : RasterLayer \ndimensions : 792, 661, 523512  (nrow, ncol, ncell)\nresolution : 10, 10  (x, y)\nextent     : 880840, 887450, 4669340, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 0.01208196, 9.533692  (min, max)\n\n",
        "> ",
        "enerscape(slope, 2)",
        "class      : RasterLayer \ndimensions : 792, 661, 523512  (nrow, ncol, ncell)\nresolution : 10, 10  (x, y)\nextent     : 880840, 887450, 4669340, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 0.02416393, 19.06738  (min, max)\n\n",
        "> ",
        "for (x in seq_len(4))",
        "+ ",
        "\n",
        "> ",
        "\n",
        "> ",
        "par(mfrow = c(2, 2))",
        "> ",
        "for (x in 10^seq_len(4)) {",
        "+ ",
        "  plot(enerscape(slope, x))",
        "+ ",
        "}",
        "> ",
        "x",
        "[1] 10000\n",
        "> ",
        "enerscape(slope, x)",
        "class      : RasterLayer \ndimensions : 792, 661, 523512  (nrow, ncol, ncell)\nresolution : 10, 10  (x, y)\nextent     : 880840, 887450, 4669340, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 120.8196, 95336.92  (min, max)\n\n",
        "> ",
        "enerscape(slope, 100)",
        "class      : RasterLayer \ndimensions : 792, 661, 523512  (nrow, ncol, ncell)\nresolution : 10, 10  (x, y)\nextent     : 880840, 887450, 4669340, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 1.208196, 953.3692  (min, max)\n\n",
        "> ",
        "a <- enerscape(slope, 100)",
        "> ",
        "b <- enerscape(slope, 1000)",
        "> ",
        "a / b",
        "class      : RasterLayer \ndimensions : 792, 661, 523512  (nrow, ncol, ncell)\nresolution : 10, 10  (x, y)\nextent     : 880840, 887450, 4669340, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 0.1, 0.1  (min, max)\n\n",
        "> ",
        "enerscape <- function(slope, m) {",
        "+ ",
        "  g <- 9.80665",
        "+ ",
        "  eff <- m ^ 0.15",
        "+ ",
        "  W <- m * g * sin(0.01745329 * slope) * eff #radians",
        "+ ",
        "  return(W)",
        "+ ",
        "}",
        "> ",
        "par(mfrow = c(2, 2))",
        "> ",
        "for (x in 10^seq_len(4)) {",
        "+ ",
        "  plot(enerscape(slope, x))",
        "+ ",
        "}",
        "> ",
        "b <- enerscape(slope, 1000)",
        "> ",
        "a <- enerscape(slope, 100)",
        "> ",
        "a / b",
        "class      : RasterLayer \ndimensions : 792, 661, 523512  (nrow, ncol, ncell)\nresolution : 10, 10  (x, y)\nextent     : 880840, 887450, 4669340, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 0.07079458, 0.07079458  (min, max)\n\n",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "plot(a - b)",
        "> ",
        "plot(b - a)",
        "> ",
        "par(mfrow = c(2, 2))",
        "> ",
        "for (x in 10^seq_len(4)) {",
        "+ ",
        "  r <- enerscape(slope, x)",
        "+ ",
        "  r[r <= 0] <- NA",
        "+ ",
        "  plot()",
        "+ ",
        "}",
        "Error in xy.coords(x, y, xlabel, ylabel, log) : \n  argument \"x\" is missing, with no default\n",
        "> ",
        "x",
        "[1] 10\n",
        "> ",
        "par(mfrow = c(2, 2))",
        "> ",
        "for (x in 10^seq_len(4)) {",
        "+ ",
        "  r <- enerscape(slope, x)",
        "+ ",
        "  r[r <= 0] <- NA",
        "+ ",
        "  plot()",
        "+ ",
        "}",
        "Error in xy.coords(x, y, xlabel, ylabel, log) : \n  argument \"x\" is missing, with no default\n",
        "> ",
        "x",
        "[1] 10\n",
        "> ",
        "enerscape <- function(slope, m) {",
        "+ ",
        "  g <- 9.80665 #gravitational pull",
        "+ ",
        "  eff <- m ^ 0.15 #efficiency of locomotion - filler, to be determined",
        "+ ",
        "  h <- sin(0.01745329 * slope) #0.01745329 = degrees to radians conversion",
        "+ ",
        "  W <- m * g * h * eff #work (Joule)",
        "+ ",
        "  return(W)",
        "+ ",
        "}",
        "> ",
        "for (x in 10^seq_len(4)) {",
        "+ ",
        "  r <- enerscape(slope, x)",
        "+ ",
        "  r[r <= 0] <- NA",
        "+ ",
        "  plot()",
        "+ ",
        "}",
        "Error in xy.coords(x, y, xlabel, ylabel, log) : \n  argument \"x\" is missing, with no default\n",
        "> ",
        "enerscape(slope, x)",
        "class      : RasterLayer \ndimensions : 792, 661, 523512  (nrow, ncol, ncell)\nresolution : 10, 10  (x, y)\nextent     : 880840, 887450, 4669340, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 0.1706623, 134.667  (min, max)\n\n",
        "> ",
        "  r <- enerscape(slope, x)",
        "> ",
        "r",
        "class      : RasterLayer \ndimensions : 792, 661, 523512  (nrow, ncol, ncell)\nresolution : 10, 10  (x, y)\nextent     : 880840, 887450, 4669340, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 0.1706623, 134.667  (min, max)\n\n",
        "> ",
        "  r[r <= 0] <- NA",
        "> ",
        "par(mfrow = c(2, 2))",
        "> ",
        "for (x in 10^seq_len(4)) {",
        "+ ",
        "  r <- enerscape(slope, x)",
        "+ ",
        "  r[r <= 0] <- NA",
        "+ ",
        "  plot(r)",
        "+ ",
        "}",
        "> ",
        "enerscape <- function(slope, m) {",
        "+ ",
        "  g <- 9.80665 #gravitational pull",
        "+ ",
        "  eff <- 0.0005 * m ^ 0.15 #efficiency of locomotion - filler, to be determined",
        "+ ",
        "  h <- sin(0.01745329 * slope) #0.01745329 = degrees to radians conversion",
        "+ ",
        "  W <- m * g * h * eff #work (Joule)",
        "+ ",
        "  return(W)",
        "+ ",
        "}",
        "> ",
        "par(mfrow = c(2, 2))",
        "> ",
        "for (x in 10^seq_len(4)) {",
        "+ ",
        "  r <- enerscape(slope, x)",
        "+ ",
        "  r[r <= 0] <- NA",
        "+ ",
        "  plot(r)",
        "+ ",
        "}",
        "> ",
        "enerscape(slope, x)",
        "class      : RasterLayer \ndimensions : 792, 661, 523512  (nrow, ncol, ncell)\nresolution : 10, 10  (x, y)\nextent     : 880840, 887450, 4669340, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 0.2404958, 189.7715  (min, max)\n\n",
        "> ",
        "enerscape(slope, x) * 0.0005",
        "class      : RasterLayer \ndimensions : 792, 661, 523512  (nrow, ncol, ncell)\nresolution : 10, 10  (x, y)\nextent     : 880840, 887450, 4669340, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 0.0001202479, 0.09488577  (min, max)\n\n",
        "> ",
        "enerscape <- function(slope, m) {",
        "+ ",
        "  g <- 9.80665 #gravitational pull",
        "+ ",
        "  eff <- 0.0005 * m ^ 0.15 #efficiency of locomotion - filler, to be determined",
        "+ ",
        "  h <- sin(0.01745329 * slope) #0.01745329 = degrees to radians conversion",
        "+ ",
        "  W <- m * g * h * eff #work (Joule)",
        "+ ",
        "  return(W)",
        "+ ",
        "}",
        "> ",
        "par(mfrow = c(2, 2))",
        "> ",
        "for (x in 10^seq_len(4)) {",
        "+ ",
        "  r <- enerscape(slope, x)",
        "+ ",
        "  r[r <= 0] <- NA",
        "+ ",
        "  plot(r)",
        "+ ",
        "}",
        "> ",
        "enerscape(slope, x)",
        "class      : RasterLayer \ndimensions : 792, 661, 523512  (nrow, ncol, ncell)\nresolution : 10, 10  (x, y)\nextent     : 880840, 887450, 4669340, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 0.2404958, 189.7715  (min, max)\n\n",
        "> ",
        "enerscape <- function(slope, m) {",
        "+ ",
        "  g <- 9.80665 #gravitational pull",
        "+ ",
        "  eff <- 10^-8 * m ^ 0.15 #efficiency of locomotion - filler, to be determined",
        "+ ",
        "  h <- sin(0.01745329 * slope) #0.01745329 = degrees to radians conversion",
        "+ ",
        "  W <- m * g * h * eff #work (Joule)",
        "+ ",
        "  return(W)",
        "+ ",
        "}",
        "> ",
        "enerscape(slope, x)",
        "class      : RasterLayer \ndimensions : 792, 661, 523512  (nrow, ncol, ncell)\nresolution : 10, 10  (x, y)\nextent     : 880840, 887450, 4669340, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 4.809916e-06, 0.003795431  (min, max)\n\n",
        "> ",
        "par(mfrow = c(2, 2))",
        "> ",
        "for (x in 10^seq_len(4)) {",
        "+ ",
        "  r <- enerscape(slope, x)",
        "+ ",
        "  r[r <= 0] <- NA",
        "+ ",
        "  plot(r)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "  r <- enerscape(slope, x)",
        "> ",
        "r",
        "class      : RasterLayer \ndimensions : 792, 661, 523512  (nrow, ncol, ncell)\nresolution : 10, 10  (x, y)\nextent     : 880840, 887450, 4669340, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 4.809916e-06, 0.003795431  (min, max)\n\n",
        "> ",
        "sum(values(r) > 0)",
        "[1] 523512\n",
        "> ",
        "sum(values(r) < 0)",
        "[1] 0\n",
        "> ",
        "sum(values(r) <- 0)",
        "[1] 0\n",
        "> ",
        "values(r)",
        "   [1] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n  [36] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n  [71] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [106] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [141] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [176] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [211] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        " 0 0 0 0 0 0 0 0 0 0 0 0 0\n [246] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [281] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [316] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [351] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [386] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [421] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [456] 0 0 0 0 0 0 0 0 0",
        " 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [491] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [526] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [561] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [596] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [631] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [666] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        " 0\n [701] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [736] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [771] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [806] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [841] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [876] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [911] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        " 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [946] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [981] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [ reached getOption(\"max.print\") -- omitted 522512 entries ]\n",
        "> ",
        "enerscape <- function(slope, m) {",
        "+ ",
        "  g <- 9.80665 #gravitational pull",
        "+ ",
        "  eff <- 10^-8 * m ^ 0.15 #efficiency of locomotion - filler, to be determined",
        "+ ",
        "  h <- sin(0.01745329 * slope) #0.01745329 = degrees to radians conversion",
        "+ ",
        "  W <- m * g * h * eff #work (Joule)",
        "+ ",
        "  return(W)",
        "+ ",
        "}",
        "> ",
        "  r <- enerscape(slope, x)",
        "> ",
        "r",
        "class      : RasterLayer \ndimensions : 792, 661, 523512  (nrow, ncol, ncell)\nresolution : 10, 10  (x, y)\nextent     : 880840, 887450, 4669340, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 4.809916e-06, 0.003795431  (min, max)\n\n",
        "> ",
        "enerscape <- function(slope, m) {",
        "+ ",
        "  g <- 9.80665 #gravitational pull",
        "+ ",
        "  eff <- 10^-10 * m ^ 0.15 #efficiency of locomotion - filler, to be determined",
        "+ ",
        "  h <- sin(0.01745329 * slope) #0.01745329 = degrees to radians conversion",
        "+ ",
        "  W <- m * g * h * eff #work (Joule)",
        "+ ",
        "  return(W)",
        "+ ",
        "}",
        "> ",
        " enerscape(slope, x)",
        "class      : RasterLayer \ndimensions : 792, 661, 523512  (nrow, ncol, ncell)\nresolution : 10, 10  (x, y)\nextent     : 880840, 887450, 4669340, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 4.809916e-08, 3.795431e-05  (min, max)\n\n",
        "> ",
        "enerscape <- function(slope, m) {",
        "+ ",
        "  g <- 9.80665 #gravitational pull",
        "+ ",
        "  eff <- m ^ 0.15 #efficiency of locomotion - filler, to be determined",
        "+ ",
        "  h <- sin(0.01745329 * slope) #0.01745329 = degrees to radians conversion",
        "+ ",
        "  W <- m * g * h * eff #work (Joule)",
        "+ ",
        "  return(W)",
        "+ ",
        "}",
        "> ",
        "enerscape(slope, x)",
        "class      : RasterLayer \ndimensions : 792, 661, 523512  (nrow, ncol, ncell)\nresolution : 10, 10  (x, y)\nextent     : 880840, 887450, 4669340, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 480.9916, 379543.1  (min, max)\n\n",
        "> ",
        "enerscape(slope, 10)",
        "class      : RasterLayer \ndimensions : 792, 661, 523512  (nrow, ncol, ncell)\nresolution : 10, 10  (x, y)\nextent     : 880840, 887450, 4669340, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 0.1706623, 134.667  (min, max)\n\n",
        "> ",
        "enerscape(slope, x)",
        "class      : RasterLayer \ndimensions : 792, 661, 523512  (nrow, ncol, ncell)\nresolution : 10, 10  (x, y)\nextent     : 880840, 887450, 4669340, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : 480.9916, 379543.1  (min, max)\n\n",
        "> ",
        "par(mfrow = c(2, 2))",
        "> ",
        "par(mfrow = c(2, 2))",
        "> ",
        "for (x in 10^seq_len(4)) {",
        "+ ",
        "  r <- enerscape(slope, x)",
        "+ ",
        "  r[r >= x] <- NA",
        "+ ",
        "  plot(r)",
        "+ ",
        "}",
        "> ",
        "par(mfrow = c(2, 2))",
        "> ",
        "for (x in 10^seq_len(4)) {",
        "+ ",
        "  r <- enerscape(slope, x)",
        "+ ",
        "  r[r >= x / 2] <- NA",
        "+ ",
        "  plot(r)",
        "+ ",
        "}",
        "> ",
        "par(mfrow = c(2, 2))",
        "> ",
        "for (x in 10^seq_len(4)) {",
        "+ ",
        "  r <- enerscape(slope, x)",
        "+ ",
        "  r[r >= x * 10] <- NA",
        "+ ",
        "  plot(r)",
        "+ ",
        "}",
        "> ",
        "dem_file <- \"w46585_s10/w46585_s10.tif\"",
        "> ",
        "slope_output <- \"w46585_s10/w46585_s10_slope.tif\"",
        "> ",
        "library(rasterVis)",
        "Loading required package: lattice\n",
        "Loading required package: latticeExtra\n",
        "> ",
        "dem",
        "class      : RasterLayer \ndimensions : 792, 661, 523512  (nrow, ncol, ncell)\nresolution : 10, 10  (x, y)\nextent     : 880840, 887450, 4669340, 4677260  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=32 +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : w46585_s10 \nvalues     : 642.2764, 2346.241  (min, max)\n\n",
        "> ",
        "dem <- raster(\"w46585_s10/w46585_s10.tif\")",
        "> ",
        "slope <- raster(\"w46585_s10/w46585_s10_slope.tif\")",
        "> ",
        "plot(dem)",
        "\n",
        "> ",
        "\n",
        "> ",
        "levelplot(dem)",
        "> ",
        "levelplot(slope, col.resiond = \"palegreen\")",
        "> ",
        "levelplot(slope, col.regions = \"palegreen\")",
        "> ",
        "levelplot(slope, col.regions = c('palegreen', 'midnightblue', 'indianred1'))",
        "> ",
        "levelplot(slope, col.regions = RColorBrewer::brewer.pal(9, \"Reds\"))",
        "> ",
        "levelplot(slope, col.regions = RColorBrewer::brewer.pal(20, \"Reds\"))",
        "Warning message:\n",
        "In RColorBrewer::brewer.pal(20, \"Reds\") :",
        "\n ",
        " n too large, allowed maximum for palette Reds is 9\nReturning the palette you asked for with that many colors\n\n",
        "> ",
        "levelplot(slope, col = \"red\")",
        "Error: $ operator is invalid for atomic vectors\n",
        "> ",
        "levelplot(slope, at = seq(min(slope, max(slope), lengh.out = 9)) col.regions = RColorBrewer::brewer.pal(9, \"Reds\"))",
        "Error: unexpected symbol in \"levelplot(slope, at = seq(min(slope, max(slope), lengh.out = 9)) col.regions\"\n",
        "> ",
        "levelplot(slope, at = seq(min(slope, max(slope), lengh.out = 9)), col.regions = RColorBrewer::brewer.pal(9, \"Reds\"))",
        "\nRestarting R session...\n\n"
    ]
}